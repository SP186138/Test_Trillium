/***********************************************************************************************************
SCRIPT:               Consumer Validation.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE $DATABASENAME;

DELETE FROM $DATABASENAME.ERR_PRSNA_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PRSNA_EMAIL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PRSNA_PHONE_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PRSNA_POSTL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PRSNA_SOC_NETWK_ACCT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_CNSMR_AFFLTN_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_DPEND_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_DPEND_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PET_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PET_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PRSNA_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.CNSMR_AFFLTN_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.DPEND_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.DPEND_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PET_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PET_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_EMAIL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_PHONE_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_POSTL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_SOC_NETWK_ACCT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* VALIDATION FOR MISSING LEGAL ENTITY NUMBER */ 


INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,
'Missing Legal Entity Number in Marketing Program Entity' SYS_ERR_CODE
FROM
(
SELECT 
STG.MKTNG_PGM_NBR,
STG.REGIS_CNSMR_ID_VAL
FROM
$ETL_DB.PRSNA_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN $DATABASENAME.MKTNG_PGM MKTNG_PGM_1
ON STG.MKTNG_PGM_NBR = MKTNG_PGM_1.MKTNG_PGM_NBR
WHERE MKTNG_PGM_1.MKTNG_PGM_NBR IS NULL
GROUP BY 1,2
)DER;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* VALIDATION FOR SAME CATEG CODE COMING TWICE */ 


INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,
'Email Address having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5,6
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,
'Phone having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
$ETL_DB.PRSNA_PHONE_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID	
--GROUP BY 1,2,3,4,5,6
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,
'Social having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID	
-- GROUP BY 1,2,3,4,5,6
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* VALIDATION FOR CHECKING CATEG CODE VALUES FROM ATT VALUES TABLE */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
'Not a Valid Category Code Value for EMAIL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM $DBNAME.ATTRIBUTE_VALUES A
INNER JOIN $DBNAME.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN $DBNAME.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$EMAIL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER3.MKTNG_PGM_NBR,
DER3.REGIS_CNSMR_ID_VAL,
'Not a Valid Category Code Value for PHONE' 
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE
FROM
$ETL_DB.PRSNA_PHONE_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM $DBNAME.ATTRIBUTE_VALUES A
INNER JOIN $DBNAME.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN $DBNAME.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$PHONE
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,
'Not a Valid Category Code Value for POSTAL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE
FROM
$ETL_DB.PRSNA_POSTL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM $DBNAME.ATTRIBUTE_VALUES A
INNER JOIN $DBNAME.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN $DBNAME.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$POSTL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER4;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* RECORDS HAVING MORE THEN TWO POSTAL/EMAIL/PHONE */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP.MKTNG_PGM_NBR,
TEMP.REGIS_CNSMR_ID_VAL,
'Too Many Values in Postal' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
     --  ,STG.LOAD_TS
       ,RECORD_IND
FROM $ETL_DB.PRSNA_POSTL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5
GROUP BY 1,2,3,4
HAVING COUNT(*) > 1)TEMP;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,
'Too Many Values in Phone' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
  --     ,STG.LOAD_TS
       ,RECORD_IND
FROM $ETL_DB.PRSNA_PHONE_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5
GROUP BY 1,2,3,4
HAVING COUNT(*) > 2)TEMP1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP3.MKTNG_PGM_NBR,
TEMP3.REGIS_CNSMR_ID_VAL,
'Too Many Values in Email' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
   --    ,STG.LOAD_TS
       ,RECORD_IND
FROM $ETL_DB.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5
GROUP BY 1,2,3,4
HAVING COUNT(*) > 2)TEMP3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* RECORDS WITH INVALID CONTACT INDICATOR */
/*
INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,
'CNTCT_OPTN_IND NOT VALID' SYS_ERR_CODE
FROM
(
SELECT	
  PRSNA_STG_1.MKTNG_PGM_NBR
 ,PRSNA_STG_1.REGIS_CNSMR_ID_VAL  
FROM	$ETL_DB.PRSNA_STG PRSNA_STG_1
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON PRSNA_STG_1.LOAD_ID = LOAD.LOAD_ID  
 LEFT OUTER  JOIN $ETL_DB.CNTCT_OPTN_CHCE_STG B    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND B.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from $DBNAME.ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$EMAIL)
 LEFT OUTER JOIN $ETL_DB.CNTCT_OPTN_CHCE_STG C    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=C.REGIS_CNSMR_ID_VAL
	AND C.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from $DBNAME.ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$PHONE)
 LEFT OUTER JOIN $ETL_DB.CNTCT_OPTN_CHCE_STG D    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=D.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=D.REGIS_CNSMR_ID_VAL		
	AND D.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from $DBNAME.ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$POSTL)
	WHERE
   (B.CNTCT_OPTN_IND='N'
	AND	B.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from $DBNAME.ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$EMAIL)
	OR (B.MKTNG_PGM_NBR IS NULL
	AND B.REGIS_CNSMR_ID_VAL IS NULL))       
	AND	 (C.CNTCT_OPTN_IND='N'
	AND	C.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from $DBNAME.ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$PHONE)
	OR (C.MKTNG_PGM_NBR IS NULL
	AND C.REGIS_CNSMR_ID_VAL IS NULL))       
	AND	(D.CNTCT_OPTN_IND='N'
	AND	D.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from $DBNAME.ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$POSTL)
	OR (D.MKTNG_PGM_NBR IS NULL
	AND D.REGIS_CNSMR_ID_VAL IS NULL))
	)TEMP1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
*/
/* Failed records for AGE */



INSERT INTO $DATABASENAME.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
'Failed because of Age Validation' SYS_ERR_CODE
FROM
(
   SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL, (CURRENT_DATE - CAST(BRTH_DATE AS DATE)) YEAR(4) AS age
FROM $ETL_DB.PRSNA_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
JOIN
$DBNAME.AGE_MIN_MAX M
ON
STG.CNTRY_NAME = M.country
JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
C.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
C.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
WHERE
(age >= M.MIN_AGE AND age < M.MAX_AGE
AND
(C.GUARDN_CNSNT_IND IN('N',NULL)
OR
C.GUARDN_NAME IS NULL))
OR
age < M.MIN_AGE)DER5
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* UPDATE ERR_PRSNA_STG */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG
(MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,USER_NAME
,PRSNA_REG_DT 
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME 
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,LANG_CODE
,PRSNA_STTUS_CODE
,RECORD_IND 
,LOAD_ID 
,LOAD_TS 
,MDM_LOAD_IND
,SYS_SOURCE
,SYS_NC_TYPE
,SYS_ERROR_TIME
,SYS_ERR_CODE
,SYS_DOCUMENT
,CNTRY_CODE
)
SELECT DISTINCT
ERR1.MKTNG_PGM_NBR,
ERR1.REGIS_CNSMR_ID_VAL,
ERR1.USER_NAME,
CAST(CAST(ERR1.PRSNA_REG_DT AS VARCHAR(19)) AS TIMESTAMP(0)),
ERR1.NAME_PREFX_TXT,
ERR1.GVN_NAME,
ERR1.MID_NAME,
ERR1.FAMLY_NAME,
ERR1.NAME_SUFFX_TXT,
ERR1.FULL_NAME,
ERR1.GENDR_IND,
ERR1.BRTH_DATE,
ERR1.LANG_CODE,
ERR1.PRSNA_STTUS_CODE,
ERR1.RECORD_IND,
ERR1.LOAD_ID,
ERR1.LOAD_TS,
ERR1.MDM_LOAD_IND,
TRIM(CAST(ERR1.LOAD_ID AS INTEGER)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
ERR1.LOAD_TS,
ERR.SYS_ERR_CODE,
ERR.SYS_DOCUMENT,
ERR1.CNTRY_NAME
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN $DATABASENAME.ERR_PRSNA_STG ERR
ON ERR.MKTNG_PGM_NBR = ERR1.MKTNG_PGM_NBR
AND ERR.REGIS_CNSMR_ID_VAL = ERR1.REGIS_CNSMR_ID_VAL
INNER JOIN $DBNAME.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PRSNA_STG WHERE SYS_NC_TYPE IS NULL;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
NC_TYPE,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE) 
SELECT
ERR1.LOAD_ID,
'Validations',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
'Failure',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN $DBNAME.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
GROUP BY
ERR1.LOAD_ID,
ERR1.RECORD_IND
;

.QUIT 1

.LABEL WARN
.QUIT 0
