/***********************************************************************************************************
SCRIPT:               CNSMR_MERGE.BTEQ 
DESCRIPTION:          THIS SCRIPT MERGES CONSUMER INFORMATION
DEPENDENCY:           WRAPPER
INPUT:                GOLDEN TABLES
OUTPUT:               
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 05/17/2011           TERADATA                        INITIAL VERSION
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE $DATABASENAME;

COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN REGIS_CNSMR_ID_VAL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN REFERENCE_REGISTRATIONKEY;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN DUP_REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN (LEGAL_ENT_NBR,MKTNG_PGM_NBR,REFERENCE_REGISTRATIONKEY);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN (LEGAL_ENT_NBR,MKTNG_PGM_NBR,DUP_REGIS_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN (LEGAL_ENT_NBR,MKTNG_PGM_NBR,DUP_REGIS_PRSNA_ID,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE	REGIS_PRSNA 
FROM	(
SELECT	DISTINCT * 
FROM	(
SELECT	A.LEGAL_ENT_NBR,A.MKTNG_PGM_NBR,COALESCE(B.REFERENCE_REGISTRATIONKEY,
		CAST(TRIM(A.REGIS_PRSNA_ID) AS VARCHAR(20))) AS PRSNA,A.REGIS_PRSNA_ID,
		A.REGIS_CNSMR_ID_VAL,A.REGIS_DATE,A.SYS_CREATION_DATE,A.SYS_NC_TYPE,
		RANK() OVER (PARTITION BY PRSNA 
ORDER	BY A.LEGAL_ENT_NBR,A.MKTNG_PGM_NBR,PRSNA,A.REGIS_DATE DESC,
		A.REGIS_CNSMR_ID_VAL DESC,A.SYS_CREATION_DATE DESC,A.SYS_NC_TYPE DESC) AS RNK 
FROM	REGIS_PRSNA A LEFT OUTER JOIN TRILLIUM_OUTPUT B 
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR 
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
	AND	A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR 
	AND	B.RECENT_IND = 'Y') B 
WHERE	RNK <> 1
) B 
SET	PRSNA_STATUS_CODE = 'IN' 
WHERE	REGIS_PRSNA.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR 
	AND	REGIS_PRSNA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR 
	AND	REGIS_PRSNA.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID 
	AND	REGIS_PRSNA.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
	AND	REGIS_PRSNA.REGIS_DATE=B.REGIS_DATE 
	AND	REGIS_PRSNA.SYS_CREATION_DATE=B.SYS_CREATION_DATE 
	AND	REGIS_PRSNA.SYS_NC_TYPE=B.SYS_NC_TYPE;
 
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA 
FROM	(
SELECT	DISTINCT * 
FROM	(
SELECT	LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,REGIS_CNSMR_ID_VAL,
		REGIS_DATE,SYS_CREATION_DATE,SYS_NC_TYPE,RANK() OVER (PARTITION BY LEGAL_ENT_NBR,
		MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL 
ORDER	BY LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,REGIS_DATE DESC,
		REGIS_PRSNA_ID DESC,SYS_CREATION_DATE DESC,SYS_NC_TYPE DESC) AS RNK 
GROUP	BY LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,REGIS_DATE,
		REGIS_CNSMR_ID_VAL,SYS_CREATION_DATE,SYS_NC_TYPE 
FROM	REGIS_PRSNA) B 
WHERE	RNK <> 1
) B 
SET	PRSNA_STATUS_CODE = 'IN' 
WHERE	REGIS_PRSNA.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR 
	AND	REGIS_PRSNA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR 
	AND	REGIS_PRSNA.REGIS_DATE=B.REGIS_DATE 
	AND	REGIS_PRSNA.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID 
	AND	REGIS_PRSNA.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
	AND	REGIS_PRSNA.SYS_CREATION_DATE=B.SYS_CREATION_DATE 
	AND	REGIS_PRSNA.SYS_NC_TYPE=B.SYS_NC_TYPE;


.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_POSTL_ADDR
SET POSTL_STATUS_CODE = 'AC'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,COALESCE(E.SUBSCRPTN_OPT_NBR,'') SUBSCRPTN_OPT_NBR
, COALESCE(E.SUBSCRPTN_OPT_IND,'') SUBSCRPTN_OPT_IND 
,COALESCE(E.ADDR_LINE_1_TXT,'') ADDR_LINE_1_TXT 
,COALESCE(E.ADDR_LINE_2_TXT,'') ADDR_LINE_2_TXT 
,COALESCE(E.ADDR_LINE_3_TXT,'') ADDR_LINE_3_TXT 
,COALESCE(E.CITY_NAME,'') CITY_NAME 
,COALESCE(E.POSTL_AREA_CODE,'') POSTL_AREA_CODE 
,COALESCE(E.TERR_CODE,'') TERR_CODE 
,COALESCE(E.CNTRY_CODE,'') CNTRY_CODE  

 FROM (
SELECT
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN C.REGIS_PRSNA_ID
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN B.REGIS_PRSNA_ID
 END DUP_REGIS_PRSNA_ID,
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER)
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER)     
 END REFERENCE_REGISTRATIONKEY
FROM
TRILLIUM_OUTPUT_DUP1 A

LEFT OUTER JOIN REGIS_PRSNA B
ON CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER) = B.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND B.PRSNA_STATUS_CODE = 'IN'
LEFT OUTER JOIN REGIS_PRSNA C
ON CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER) = C.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND C.PRSNA_STATUS_CODE = 'IN'
WHERE B.PRSNA_STATUS_CODE = 'IN' OR C.PRSNA_STATUS_CODE = 'IN'
QUALIFY RANK() OVER(PARTITION BY A.LEGAL_ENT_NBR,A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL
ORDER BY A.SYS_CREATION_DATE DESC  ) = 1
) A
INNER JOIN REGIS_PRSNA_POSTL_ADDR D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
INNER JOIN REGIS_PRSNA_POSTL_ADDR E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,'') = COALESCE(D.SUBSCRPTN_OPT_NBR,'')
--AND COALESCE(E.SUBSCRPTN_OPT_IND,'') = COALESCE(D.SUBSCRPTN_OPT_IND,'')
--AND COALESCE(E.ADDR_LINE_1_TXT,'') = COALESCE(D.ADDR_LINE_1_TXT,'') 
--AND COALESCE(E.ADDR_LINE_2_TXT,'') = COALESCE(D.ADDR_LINE_2_TXT,'')
--AND COALESCE(E.ADDR_LINE_3_TXT,'') = COALESCE(D.ADDR_LINE_3_TXT,'')
--AND COALESCE(E.CITY_NAME,'') = COALESCE(D.CITY_NAME,'')
--AND COALESCE(E.POSTL_AREA_CODE,'') = COALESCE(D.POSTL_AREA_CODE,'')
--AND COALESCE(E.TERR_CODE,'') = COALESCE(D.TERR_CODE,'')
--AND COALESCE(E.CNTRY_CODE,'') = COALESCE(D.CNTRY_CODE,'')
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12
) B
SET POSTL_STATUS_CODE = 'IN'
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR,'') = B.SUBSCRPTN_OPT_NBR
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_IND,'') = B.SUBSCRPTN_OPT_IND
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_1_TXT,'') = B.ADDR_LINE_1_TXT 
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_2_TXT,'') = B.ADDR_LINE_2_TXT
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_3_TXT,'') = B.ADDR_LINE_3_TXT
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.CITY_NAME,'') = B.CITY_NAME
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE,'') = B.POSTL_AREA_CODE
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.TERR_CODE,'') = B.TERR_CODE
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE,'') = B.CNTRY_CODE
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_PHONE
SET PHONE_STATUS_CODE = 'AC'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_PHONE
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,COALESCE(E.SUBSCRPTN_OPT_NBR,'') SUBSCRPTN_OPT_NBR
, COALESCE(E.SUBSCRPTN_OPT_IND,'') SUBSCRPTN_OPT_IND 
,COALESCE(E.FULL_PHONE_NUM,'') FULL_PHONE_NUM
 FROM (
SELECT
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN C.REGIS_PRSNA_ID
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN B.REGIS_PRSNA_ID
 END DUP_REGIS_PRSNA_ID,
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER)
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER)     
 END REFERENCE_REGISTRATIONKEY
FROM
TRILLIUM_OUTPUT_DUP1 A

LEFT OUTER JOIN REGIS_PRSNA B
ON CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER) = B.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND B.PRSNA_STATUS_CODE = 'IN'
LEFT OUTER JOIN REGIS_PRSNA C
ON CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER) = C.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND C.PRSNA_STATUS_CODE = 'IN'
WHERE B.PRSNA_STATUS_CODE = 'IN' OR C.PRSNA_STATUS_CODE = 'IN'
QUALIFY RANK() OVER(PARTITION BY A.LEGAL_ENT_NBR,A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL
ORDER BY A.SYS_CREATION_DATE DESC  ) = 1
) A
INNER JOIN REGIS_PRSNA_PHONE D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
INNER JOIN REGIS_PRSNA_PHONE E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,'') = COALESCE(D.SUBSCRPTN_OPT_NBR,'')
--AND COALESCE(E.SUBSCRPTN_OPT_IND,'') = COALESCE(D.SUBSCRPTN_OPT_IND,'')
--AND COALESCE(E.FULL_PHONE_NUM,'') = COALESCE(D.FULL_PHONE_NUM,'')
GROUP BY 1,2,3,4,5,6
) B
SET PHONE_STATUS_CODE = 'IN'
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR,'') = B.SUBSCRPTN_OPT_NBR
AND COALESCE(REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_IND,'') = B.SUBSCRPTN_OPT_IND
AND COALESCE(REGIS_PRSNA_PHONE.FULL_PHONE_NUM,'') = B.FULL_PHONE_NUM
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_EMAIL_ADDR
SET EMAIL_STATUS_CODE = 'AC'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,COALESCE(E.SUBSCRPTN_OPT_NBR,'') SUBSCRPTN_OPT_NBR
, COALESCE(E.SUBSCRPTN_OPT_IND,'') SUBSCRPTN_OPT_IND 
,COALESCE(E.EMAIL_ADDR_TXT,'') EMAIL_ADDR_TXT
 FROM (
SELECT
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN C.REGIS_PRSNA_ID
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN B.REGIS_PRSNA_ID
 END DUP_REGIS_PRSNA_ID,
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER)
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER)     
 END REFERENCE_REGISTRATIONKEY
FROM
TRILLIUM_OUTPUT_DUP1 A

LEFT OUTER JOIN REGIS_PRSNA B
ON CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER) = B.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND B.PRSNA_STATUS_CODE = 'IN'
LEFT OUTER JOIN REGIS_PRSNA C
ON CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER) = C.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND C.PRSNA_STATUS_CODE = 'IN'
WHERE B.PRSNA_STATUS_CODE = 'IN' OR C.PRSNA_STATUS_CODE = 'IN'
QUALIFY RANK() OVER(PARTITION BY A.LEGAL_ENT_NBR,A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL
ORDER BY A.SYS_CREATION_DATE DESC  ) = 1
) A
INNER JOIN REGIS_PRSNA_EMAIL_ADDR D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
INNER JOIN REGIS_PRSNA_EMAIL_ADDR E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,'') = COALESCE(D.SUBSCRPTN_OPT_NBR,'')
--AND COALESCE(E.SUBSCRPTN_OPT_IND,'') = COALESCE(D.SUBSCRPTN_OPT_IND,'')
--AND COALESCE(E.EMAIL_ADDR_TXT,'') = COALESCE(D.EMAIL_ADDR_TXT,'')
GROUP BY 1,2,3,4,5,6
) B
SET EMAIL_STATUS_CODE = 'IN'
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR,'') = B.SUBSCRPTN_OPT_NBR
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_IND,'') = B.SUBSCRPTN_OPT_IND
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.EMAIL_ADDR_TXT,'') = B.EMAIL_ADDR_TXT
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_SOC_NET_ACCT
SET SOC_NET_STATUS_CODE = 'AC'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,COALESCE(E.SUBSCRPTN_OPT_NBR,'') SUBSCRPTN_OPT_NBR
, COALESCE(E.SUBSCRPTN_OPT_IND,'') SUBSCRPTN_OPT_IND 
,COALESCE(E.SOCIAL_NETWK_ACCT_ID_VAL,'') SOCIAL_NETWK_ACCT_ID_VAL
 FROM (
SELECT
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN C.REGIS_PRSNA_ID
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN B.REGIS_PRSNA_ID
 END DUP_REGIS_PRSNA_ID,
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER)
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER)     
 END REFERENCE_REGISTRATIONKEY
FROM
TRILLIUM_OUTPUT_DUP1 A

LEFT OUTER JOIN REGIS_PRSNA B
ON CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER) = B.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND B.PRSNA_STATUS_CODE = 'IN'
LEFT OUTER JOIN REGIS_PRSNA C
ON CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER) = C.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND C.PRSNA_STATUS_CODE = 'IN'
WHERE B.PRSNA_STATUS_CODE = 'IN' OR C.PRSNA_STATUS_CODE = 'IN'
QUALIFY RANK() OVER(PARTITION BY A.LEGAL_ENT_NBR,A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL
ORDER BY A.SYS_CREATION_DATE DESC  ) = 1
) A
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,'') = COALESCE(D.SUBSCRPTN_OPT_NBR,'')
--AND COALESCE(E.SUBSCRPTN_OPT_IND,'') = COALESCE(D.SUBSCRPTN_OPT_IND,'')
--AND COALESCE(E.SOCIAL_NETWK_ACCT_ID_VAL,'') = COALESCE(D.SOCIAL_NETWK_ACCT_ID_VAL,'')
GROUP BY 1,2,3,4,5,6
) B
SET SOC_NET_STATUS_CODE = 'IN'
WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR,'') = B.SUBSCRPTN_OPT_NBR
AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_IND,'') = B.SUBSCRPTN_OPT_IND
AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SOCIAL_NETWK_ACCT_ID_VAL,'') = B.SOCIAL_NETWK_ACCT_ID_VAL
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE MATCHD_CNSMR_PRSNA
SET PRSNA_STATUS_CODE = 'AC'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE MATCHD_CNSMR_PRSNA
SET PRSNA_STATUS_CODE = 'IN'
WHERE (LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID) NOT IN 
(SEL LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
);

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE HSHLD_PRSNA
SET PRSNA_STATUS_CODE = 'AC'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE HSHLD_PRSNA
SET PRSNA_STATUS_CODE = 'IN'
WHERE (LEGAL_ENT_NBR,HSHLD_PRSNA_ID) NOT IN 
(SEL LEGAL_ENT_NBR,HSHLD_PRSNA_ID
FROM MATCHD_CNSMR_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
); 

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE REGIS_PRSNA
FROM (
SEL C.REGIS_PRSNA_ID,C.LEGAL_ENT_NBR,C.MKTNG_PGM_NBR,C.REGIS_CNSMR_ID_VAL
 FROM REGIS_PRSNA C
INNER JOIN REGIS_PRSNA C1
ON C.REGIS_PRSNA_ID = C1.REGIS_PRSNA_ID
AND C.LEGAL_ENT_NBR = C1.LEGAL_ENT_NBR
AND C.MKTNG_PGM_NBR = C1.MKTNG_PGM_NBR
AND C.REGIS_CNSMR_ID_VAL = C1.REGIS_CNSMR_ID_VAL
AND C.PRSNA_STATUS_CODE = 'IN'
LEFT OUTER JOIN REGIS_PRSNA_EMAIL_ADDR E
ON E.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND E.EMAIL_STATUS_CODE = 'AC'
LEFT OUTER JOIN REGIS_PRSNA_PHONE E1
ON E1.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E1.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E1.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND E1.PHONE_STATUS_CODE = 'AC'
LEFT OUTER JOIN REGIS_PRSNA_POSTL_ADDR E2
ON E2.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E2.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E2.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND E2.POSTL_STATUS_CODE = 'AC'
WHERE E.EMAIL_STATUS_CODE = 'AC'
OR E1.PHONE_STATUS_CODE = 'AC'
OR E2.POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2,3,4
) B
SET PRSNA_STATUS_CODE = 'AC'
WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA.REGIS_CNSMR_ID_VAL = B.REGIS_CNSMR_ID_VAL
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO RPT_LOAD_NBR
(
LOAD_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,STAGING_NBR
,ERROR_NBR
,ACTIVE_NBR
,DUPLICATE_NBR
,PHONE_OPT_IN
,PHONE_OPT_OUT
,EMAIL_OPT_IN
,EMAIL_OPT_OUT
,POSTAL_OPT_IN
,POSTAL_OPT_OUT
,SOCIAL_OPT_IN
,SOCIAL_OPT_OUT
)
SELECT DISTINCT
A.LOAD_ID
,COALESCE(B.MKTNG_PGM_NBR,0)
,COALESCE(C.LEGAL_ENT_NBR,0)
,COALESCE(B.STAGING_NBR,0)
,COALESCE(N.ERROR_NBR,0)
,COALESCE(D.ACTIVE_NBR,0)
,COALESCE(E.DUPLICATE_NBR,0)
,COALESCE(F.PHONE_OPT_IN,0)
,COALESCE(G.PHONE_OPT_OUT,0)
,COALESCE(H.EMAIL_OPT_IN,0)
,COALESCE(I.EMAIL_OPT_OUT,0)
,COALESCE(J.POSTAL_OPT_IN,0)
,COALESCE(K.POSTAL_OPT_OUT,0)
,COALESCE(L.SOCIAL_OPT_IN,0)
,COALESCE(M.SOCIAL_OPT_OUT,0)
FROM
LOAD_CONTROL A
INNER JOIN 
MDM_LOAD_CONTROL LC
ON 
A.LOAD_ID = LC.LOAD_ID
LEFT OUTER JOIN
(SELECT LOAD_ID,
MKTNG_PGM_NBR,
COUNT(DISTINCT REGIS_CNSMR_ID_VAL) STAGING_NBR
FROM PRSNA_STG_CNT
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID
LEFT OUTER JOIN
MKTNG_PGM C
ON 
B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) ACTIVE_NBR
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
GROUP BY 1,2
) D
ON B.LOAD_ID = D.SYS_SOURCE
AND B.MKTNG_PGM_NBR = D.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) DUPLICATE_NBR
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'IN'
GROUP BY 1,2
) E
ON B.LOAD_ID = E.SYS_SOURCE
AND B.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) PHONE_OPT_IN
FROM REGIS_PRSNA_PHONE
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) F
ON B.LOAD_ID = F.SYS_SOURCE
AND B.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) PHONE_OPT_OUT
FROM REGIS_PRSNA_PHONE
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) G
ON B.LOAD_ID = G.SYS_SOURCE
AND B.MKTNG_PGM_NBR = G.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) EMAIL_OPT_IN
FROM REGIS_PRSNA_EMAIL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) H
ON B.LOAD_ID = H.SYS_SOURCE
AND B.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) EMAIL_OPT_OUT
FROM REGIS_PRSNA_EMAIL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) I
ON B.LOAD_ID = I.SYS_SOURCE
AND B.MKTNG_PGM_NBR = I.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) POSTAL_OPT_IN
FROM REGIS_PRSNA_POSTL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) J
ON B.LOAD_ID = J.SYS_SOURCE
AND B.MKTNG_PGM_NBR = J.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) POSTAL_OPT_OUT
FROM REGIS_PRSNA_POSTL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) K
ON B.LOAD_ID = K.SYS_SOURCE
AND B.MKTNG_PGM_NBR = K.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) SOCIAL_OPT_IN
FROM REGIS_PRSNA_SOC_NETK_ACT
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) L
ON B.LOAD_ID = L.SYS_SOURCE
AND B.MKTNG_PGM_NBR = L.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(SEL CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE,
MKTNG_PGM_NBR,
COUNT(REGIS_PRSNA_ID) SOCIAL_OPT_OUT
FROM REGIS_PRSNA_SOC_NETK_ACT
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) M
ON B.LOAD_ID = M.SYS_SOURCE
AND B.MKTNG_PGM_NBR = M.MKTNG_PGM_NBR

LEFT OUTER JOIN (SEL LOAD_ID,
MKTNG_PGM_NBR,
COUNT(DISTINCT REGIS_CNSMR_ID_VAL) ERROR_NBR
FROM ERR_PRSNA_STG
GROUP BY 1,2
) N
ON B.LOAD_ID = N.LOAD_ID
AND B.MKTNG_PGM_NBR = N.MKTNG_PGM_NBR

WHERE A.LOAD_TYPE = 'ETL'
AND A.LOADSTATUS = 'Success'
AND A.FORMAT_ID = 1
AND A.MDM_PROCESS_DESC='Completed'
AND A.TARGETCNT > 0
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR
.QUIT 1

.LABEL WARN
.QUIT 0