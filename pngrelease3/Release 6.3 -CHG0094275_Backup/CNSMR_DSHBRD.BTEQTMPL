/***********************************************************************************************************
SCRIPT:               CNSMR_MERGE.BTEQ 
DESCRIPTION:          THIS SCRIPT MERGES CONSUMER INFORMATION
DEPENDENCY:           WRAPPER
INPUT:                GOLDEN TABLES
OUTPUT:               
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 05/17/2011           TERADATA                        INITIAL VERSION
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE $DATABASENAME;


DELETE FROM RPT_ADDR_QLTY ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO RPT_ADDR_QLTY
(
MKTNG_PGM_NBR                 
,LEGAL_ENT_NBR                 
,SUCCESS_PCT                   
,LCLTY_FAIL_PCT                
,UNK_ADDR_PCT                  
,MULTIPLE_ADDR_MATCH_PCT       
,CITY_TERR_FAIL_PCT            
,STREET_NAME_FAIL_PCT          
,HOUSE_NO_FAIL_PCT             
,STREET_COMPT_FAIL_PCT         
,MULTIPLE_STREET_ADDR_PCT      
)
SELECT
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
SUM(SUCCESS_PCT),
SUM(LCLTY_FAIL_PCT),
SUM(UNK_ADDR_PCT),
SUM(MULTIPLE_ADDR_MATCH_PCT),
SUM(CITY_TERR_FAIL_PCT),
SUM(STREET_NAME_FAIL_PCT),
SUM(HOUSE_NO_FAIL_PCT),
SUM(STREET_COMPT_FAIL_PCT),
SUM(MULTIPLE_STREET_ADDR_PCT)
FROM
(
SEL 
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
CASE WHEN PR_GEOCODE_FAIL = 0  
        OR (PR_REV_GROUP IN (0,008,001,002,003,004,005,008,009,010,012,019)
      AND  CNTRY_CODE NOT IN ('JPN','CHN','TWN','KOR','NZL','AUS','MYS','SGP','HKG'))
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS SUCCESS_PCT,
CASE WHEN PR_GEOCODE_FAIL = 1     
       OR PR_REV_GROUP IN (014,016,018)
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS CITY_TERR_FAIL_PCT,
CASE WHEN (PR_GEOCODE_FAIL = 2 AND CNTRY_CODE IN ('JPN','CHN','TWN','KOR'))
       OR PR_GEOCODE_FAIL IN (6,7,8)
       OR (PR_GEOCODE_FAIL = 5 AND CNTRY_CODE IN ('CHN'))
       OR PR_REV_GROUP IN (007,013,015,017)
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS LCLTY_FAIL_PCT,
CASE WHEN (PR_GEOCODE_FAIL = 2 AND CNTRY_CODE NOT IN ('JPN','CHN','TWN','KOR'))
       OR (PR_GEOCODE_FAIL = 3 AND CNTRY_CODE IN ('CHN'))
       OR PR_REV_GROUP IN (006,011)
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS STREET_NAME_FAIL_PCT,
CASE WHEN PR_GEOCODE_FAIL = 3 AND CNTRY_CODE <> 'CHN'     
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS HOUSE_NO_FAIL_PCT,
CASE WHEN PR_GEOCODE_FAIL = 4 AND CNTRY_CODE IN ('JPN','CHN','TWN','KOR')     
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS UNK_ADDR_PCT,
CASE WHEN PR_GEOCODE_FAIL = 4 AND CNTRY_CODE NOT IN ('JPN','CHN','TWN','KOR')
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS STREET_COMPT_FAIL_PCT,
CASE WHEN PR_GEOCODE_FAIL = 5 AND CNTRY_CODE <> 'CHN'   
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS MULTIPLE_ADDR_MATCH_PCT,
CASE WHEN PR_GEOCODE_FAIL = 7  
       OR  PR_REV_GROUP IN (020)
     THEN (CAST(A.CNT AS DECIMAL(10,2))/CAST(B.TOTAL AS DECIMAL(10,2)))*100
END AS MULTIPLE_STREET_ADDR_PCT

FROM	
(
SEL LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
PR_REV_GROUP,
PR_GEOCODE_FAIL,
CNTRY_CODE,
COUNT(*) AS CNT  
FROM
REGIS_PRSNA_POSTL_ADDR
GROUP BY 1,2,3,4,5) A
,(
SEL
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
COUNT(*) AS TOTAL 
FROM
REGIS_PRSNA_POSTL_ADDR
GROUP BY 1,2) B
WHERE A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
) A
GROUP BY 1,2
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE RPT_ADDR_QLTY
FROM
(
SELECT
MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,COUNT(REGIS_PRSNA_ID) AS CNT
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
GROUP BY 1,2
) B
SET ACTV_RGSTRTN_CNT = B.CNT
,SYS_LAST_MODIFIED_DATE = CAST(CURRENT_TIMESTAMP AS VARCHAR(20))
WHERE RPT_ADDR_QLTY.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND RPT_ADDR_QLTY.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM RPT_DATA_NBR ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO RPT_DATA_NBR
(
MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,STAGING_NBR
,ERROR_NBR
,ACTIVE_NBR
,DUPLICATE_NBR
,PHONE_OPT_IN
,PHONE_OPT_OUT
,EMAIL_OPT_IN
,EMAIL_OPT_OUT
,POSTAL_OPT_IN
,POSTAL_OPT_OUT
,SOCIAL_OPT_IN
,SOCIAL_OPT_OUT
)
SELECT DISTINCT
A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,COALESCE(B.STAGING_NBR,0)
,0
,COALESCE(D.ACTIVE_NBR,0)
,COALESCE(E.DUPLICATE_NBR,0)
,COALESCE(F.PHONE_OPT_IN,0)
,COALESCE(G.PHONE_OPT_OUT,0)
,COALESCE(H.EMAIL_OPT_IN,0)
,COALESCE(I.EMAIL_OPT_OUT,0)
,COALESCE(J.POSTAL_OPT_IN,0)
,COALESCE(K.POSTAL_OPT_OUT,0)
,COALESCE(L.SOCIAL_OPT_IN,0)
,COALESCE(M.SOCIAL_OPT_OUT,0)
FROM
MKTNG_PGM A
LEFT OUTER JOIN
(SELECT MKTNG_PGM_NBR,
COUNT(DISTINCT REGIS_CNSMR_ID_VAL) STAGING_NBR
FROM PRSNA_STG_CNT
GROUP BY 1
) B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

LEFT OUTER JOIN 
(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) ACTIVE_NBR
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
GROUP BY 1,2
) D
ON A.MKTNG_PGM_NBR = D.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = D.LEGAL_ENT_NBR
LEFT OUTER JOIN 
(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) DUPLICATE_NBR
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'IN'
GROUP BY 1,2
) E
ON A.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = E.LEGAL_ENT_NBR

LEFT OUTER JOIN 
(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) PHONE_OPT_IN
FROM REGIS_PRSNA_PHONE
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) F
ON A.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = F.LEGAL_ENT_NBR
LEFT OUTER JOIN 

(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) PHONE_OPT_OUT
FROM REGIS_PRSNA_PHONE
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) G
ON A.MKTNG_PGM_NBR = G.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = G.LEGAL_ENT_NBR
LEFT OUTER JOIN 

(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) EMAIL_OPT_IN
FROM REGIS_PRSNA_EMAIL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) H
ON A.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = H.LEGAL_ENT_NBR
LEFT OUTER JOIN 

(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) EMAIL_OPT_OUT
FROM REGIS_PRSNA_EMAIL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) I
ON B.MKTNG_PGM_NBR = I.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = I.LEGAL_ENT_NBR
LEFT OUTER JOIN 

(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) POSTAL_OPT_IN
FROM REGIS_PRSNA_POSTL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) J
ON A.MKTNG_PGM_NBR = J.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = J.LEGAL_ENT_NBR
LEFT OUTER JOIN 

(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) POSTAL_OPT_OUT
FROM REGIS_PRSNA_POSTL_ADDR
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) K
ON A.MKTNG_PGM_NBR = K.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = K.LEGAL_ENT_NBR
LEFT OUTER JOIN 

(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) SOCIAL_OPT_IN
FROM REGIS_PRSNA_SOC_NETK_ACT
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) L
ON A.MKTNG_PGM_NBR = L.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = L.LEGAL_ENT_NBR
LEFT OUTER JOIN 

(SEL MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COUNT(REGIS_PRSNA_ID) SOCIAL_OPT_OUT
FROM REGIS_PRSNA_SOC_NETK_ACT
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) M
ON A.MKTNG_PGM_NBR = M.MKTNG_PGM_NBR 
AND A.LEGAL_ENT_NBR = M.LEGAL_ENT_NBR
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM RPT_CNSMR_NBR ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO RPT_CNSMR_NBR
(
LEGAL_ENT_NBR
,MTCHD_CNSMR_NBR
,HSHLD_NBR
)
SELECT
A.LEGAL_ENT_NBR
,B.MTCHD_CNSMR_NBR
,C.HSHLD_NBR
FROM
LEGAL_ENT A

LEFT OUTER JOIN
(SEL LEGAL_ENT_NBR,
COUNT(DISTINCT MATCHD_CNSMR_PRSNA_ID) MTCHD_CNSMR_NBR
FROM MATCHD_CNSMR_PRSNA
GROUP BY 1)B
ON 
A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR

LEFT OUTER JOIN
(SEL LEGAL_ENT_NBR,
COUNT(DISTINCT HSHLD_PRSNA_ID) HSHLD_NBR
FROM HSHLD_PRSNA
GROUP BY 1)C
ON 
A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR
.QUIT 1

.LABEL WARN
.QUIT 0