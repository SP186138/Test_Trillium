REPLACE PROCEDURE PNGMDM.FLDCLEANUP (
INOUT RETURNCODE INTEGER,
IN TABLE_NAME VARCHAR(30),
IN DATABASE_NAME VARCHAR(30)
)

LMAIN: BEGIN

DECLARE SYSTEMDATE VARCHAR(19);
DECLARE ERRORTABLE1 VARCHAR(30);
DECLARE ERRORTABLE2 VARCHAR(30);
DECLARE ERRORTABLE3 VARCHAR(30);
DECLARE ERRORTABLE4 VARCHAR(30);
DECLARE DBNAME VARCHAR(30);
DECLARE TBLNAME VARCHAR(30);
DECLARE TABLEDEFN VARCHAR(10000);
DECLARE GRANTDEFN VARCHAR(10000);
DECLARE STMT VARCHAR(1);
DECLARE STMT1 VARCHAR(10000);

SET DBNAME = DATABASE_NAME;
SET TBLNAME = TABLE_NAME;
SET ERRORTABLE1 = TABLE_NAME||'_ERR1';
SET ERRORTABLE2 = TABLE_NAME||'_ERR2';

     CREATE VOLATILE TABLE ACCESSRIGHT_V2R61_REF
     (
      ACCESSRIGHT VARCHAR(2) NOT NULL,
      ACCESSRIGHT_DESC VARCHAR(10000) NOT NULL
     ) UNIQUE PRIMARY INDEX (ACCESSRIGHT)
     ON COMMIT PRESERVE ROWS;

     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('AE','ALTER EXTERNAL PROCEDURE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('AF','ALTER FUNCTION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('AP','ALTER PROCEDURE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('AS','ABORT SESSION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CA','CREATE AUTHORIZATION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CD','CREATE DATABASE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CE','CREATE EXTERNAL PROCEDURE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CF','CREATE FUNCTION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CG','CREATE TRIGGER');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CM','CREATE MACRO');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CO','CREATE PROFILE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CP','CHECKPOINT');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CR','CREATE ROLE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CT','CREATE TABLE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CU','CREATE USER');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('CV','CREATE VIEW');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('D','DELETE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DA','DROP AUTHORIZATION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DD','DROP DATABASE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DF','DROP FUNCTION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DG','DROP TRIGGER');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DM','DROP MACRO');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DO','DROP PROFILE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DP','DUMP');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DR','DROP ROLE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DT','DROP TABLE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DU','DROP USER');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('DV','DROP VIEW');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('E','EXECUTE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('EF','EXECUTE FUNCTION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('I','INSERT');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('IX','INDEX');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('MR','MONITOR RESOURCE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('MS','MONITOR SESSION');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('PC','CREATE PROCEDURE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('PD','DROP PROCEDURE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('PE','EXECUTE PROCEDURE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('R','SELECT');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('RF','REFERENCE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('RS','RESTORE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('RO','REPLICATION OVERIDE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('SR','SET RESOURCE RATE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('SS','SET SESSION RATE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('U','UPDATE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('UM','UDT METHOD');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('UT','UDT TYPE');
     INSERT INTO ACCESSRIGHT_V2R61_REF VALUES ('UU','UDT USAGE');

   
SELECT DISTINCT CAST(CAST(CURRENT_DATE AS DATE FORMAT 'YYYYMMDD') AS VARCHAR(8))||
CAST(CAST(CURRENT_TIME AS TIME FORMAT 'HHMISS') AS VARCHAR(6)) INTO :SYSTEMDATE FROM SYS_CALENDAR.CALENDAR;

SET ERRORTABLE3 = TABLE_NAME||'_ERR1'||SYSTEMDATE;
SET ERRORTABLE4 = TABLE_NAME||'_ERR2'||SYSTEMDATE;

SEL REQUESTTEXT INTO :TABLEDEFN FROM DBC.TABLES WHERE DATABASENAME=:DATABASE_NAME
AND TABLENAME=:TABLE_NAME
AND TABLEKIND='T';

SELECT 'GRANT '||TRIM(B.ACCESSRIGHT_DESC)||' ON '||TRIM(A.DATABASENAME)||'.'||TRIM(A.TABLENAME)||' TO '||
TRIM(A.USERNAME)||CASE WHEN A.GRANTAUTHORITY = 'Y' THEN ' WITH GRANT OPTION;' ELSE ';' END INTO :GRANTDEFN
FROM DBC.ALLRIGHTS A
INNER JOIN ACCESSRIGHT_V2R61_REF B
ON A.ACCESSRIGHT = B.ACCESSRIGHT
WHERE A.TABLENAME=:DATABASE_NAME
AND A.DATABASENAME=:TABLE_NAME;

L1: BEGIN

SEL 1 INTO :STMT FROM SYSADMIN.FASTLOGV WHERE DATABASENAME=:DATABASE_NAME
AND TABLENAME=:TABLE_NAME;

IF ACTIVITY_COUNT = 1 THEN 
SET STMT1 = 'DROP TABLE '||DBNAME||'.'||TBLNAME||';';
CALL DBC.SYSEXECSQL (STMT1);
CALL DBC.SYSEXECSQL (TABLEDEFN);
CALL DBC.SYSEXECSQL (GRANTDEFN);
END IF;

END L1;

L2: BEGIN

SEL REQUESTTEXT INTO :TABLEDEFN FROM DBC.TABLES WHERE DATABASENAME=:DATABASE_NAME
AND TABLENAME=:ERRORTABLE1
AND TABLEKIND='T';

IF ACTIVITY_COUNT = 1 THEN 
SEL 1 INTO :STMT FROM SYSADMIN.FASTLOGV WHERE DATABASENAME=:DATABASE_NAME
AND TABLENAME=:TABLE_NAME;

IF ACTIVITY_COUNT = 1 THEN 
SET STMT1 = 'DROP TABLE '||DBNAME||'.'||ERRORTABLE1||';';
CALL DBC.SYSEXECSQL (STMT1);
LEAVE L2;
END IF;

SET STMT1 = 'RENAME TABLE '||DBNAME||'.'||ERRORTABLE1||' TO '||DBNAME||'.'||ERRORTABLE3||';';
CALL DBC.SYSEXECSQL (STMT1);
END IF;

END L2;

L3: BEGIN

SEL REQUESTTEXT INTO :TABLEDEFN FROM DBC.TABLES WHERE DATABASENAME=:DATABASE_NAME
AND TABLENAME=:ERRORTABLE2
AND TABLEKIND='T';

IF ACTIVITY_COUNT = 1 THEN 
SEL 1 INTO :STMT FROM SYSADMIN.FASTLOGV WHERE DATABASENAME=:DATABASE_NAME
AND TABLENAME=:TABLE_NAME;

IF ACTIVITY_COUNT = 1 THEN 
SET STMT1 = 'DROP TABLE '||DBNAME||'.'||ERRORTABLE2||';';
CALL DBC.SYSEXECSQL (STMT1);
LEAVE L3;
END IF;

SET STMT1 = 'RENAME TABLE '||DBNAME||'.'||ERRORTABLE2||' TO '||DBNAME||'.'||ERRORTABLE4||';';
CALL DBC.SYSEXECSQL (STMT1);
END IF;

END L3;

DELETE FROM SYSADMIN.FASTLOGV WHERE DATABASENAME=:DATABASE_NAME
AND TABLENAME=:TABLE_NAME;

DROP TABLE ACCESSRIGHT_V2R61_REF;

SET RETURNCODE = SQLCODE;

END LMAIN;