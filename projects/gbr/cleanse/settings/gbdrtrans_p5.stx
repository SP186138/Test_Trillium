<?xml version="1.0" encoding="UTF-8"?>
<TRANFRMR xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <SETTINGS_FILE_ENCODING>UTF8</SETTINGS_FILE_ENCODING>

  

<CATEGORY>
    <INPUT>
      <PARAMETER>
        <INPUT_SETTINGS>
          <ARGUMENTS>
            <ENTRY>
              <ENTRY_ID>1</ENTRY_ID>
              <FILE_QUALIFIER>e5_gb_pmatch_p4</FILE_QUALIFIER>
              <DATA_FILE_NAME>stdin</DATA_FILE_NAME>
              <DDL_FILE_NAME>$(DDL)/gb_pmatch_p4.ddx</DDL_FILE_NAME>
               <FILE_DELIMITER/>
               <USE_QUOTES_AS_QUALIFIER/>
             
              
              
              <START_RECORD/>
              <MAX_RECORDS/>
              <NTH_SAMPLE/>
              
              <EXCEPTIONS_FILE_NAME/>
              
              
              
            <SELECT_RECORDS/>
</ENTRY>
          </ARGUMENTS>
        </INPUT_SETTINGS>

        
      </PARAMETER>
    </INPUT>
    <OUTPUT>
      <PARAMETER>
<OUTPUT_SETTINGS>
          <ARGUMENTS>
            <FILE_QUALIFIER>OUTPUT</FILE_QUALIFIER>
            <DATA_FILE_NAME>stdout</DATA_FILE_NAME>
            <DDL_FILE_NAME>$(DDL)/gb_drtranfrmr_p5.ddx</DDL_FILE_NAME>
            
          <SELECT_RECORDS/>
</ARGUMENTS>
        </OUTPUT_SETTINGS>


























































































































































































<CONDITIONALS>
<ARGUMENTS>
<ENTRY>
   <ENTRY_ID>1</ENTRY_ID>
   <FOR_FILES>OUTPUT</FOR_FILES>
   <CONDITION>
   /*
   /* ENTRY ID/SUBROUTINE LIST:
   /*   1. main
   /*   2. gbr_keep_original_address
   /*   3. gbr_parsed_address
   /*   4. gbr_postal_matched_address
   /*   5. remove_blank_address_lines
   /*   6. set_address_case
   /*   7. set_name_fields_clear_busname
   /*
/* +----------------------------------------------------------------------------+
/* | ROUTINE: gbr_cleanse                                        UNITED KINGDOM |
/* +----------------------------------------------------------------------------+
/*
   IF(ALWAYS)
      RUN FIELD_SCANNING(ALL)
      RUN TABLE_RECODING(ALL)
      IF(GB_GOUT_MATCH_LEVEL = "0" AND PR_REV_GROUP IN "000,002,005,008,009,010,014,018")
         SET dr_cleanse_level = "2"
         RUN SUBROUTINE(4)
      ELSE
         IF(PR_REV_GROUP IN "000,002,005,008,009,010")
            SET dr_cleanse_level = "1"
            RUN SUBROUTINE(3)
         ELSE
            SET dr_cleanse_level = "0"
            RUN SUBROUTINE(2)
         ENDIF
      ENDIF
      RUN SUBROUTINE(6)
      RUN SUBROUTINE(7)
      SET dr_country      = "GB"
      SET dr_country_name = "GBR"
   ENDIF
   </CONDITION>
</ENTRY>
<ENTRY>
   <ENTRY_ID>2</ENTRY_ID>
   <FOR_FILES>OUTPUT</FOR_FILES>
   <CONDITION>SUBROUTINE
   /* SUBROUTINE: gbr_keep_original_address
/* +----------------------------------------------------------------------------+
/* | SUBROUTINE: gbr_keep_original_address                                      |
/* +----------------------------------------------------------------------------+
/*
/*   Purpose: Populates the address fields with original input data.
/*
   IF(ALWAYS)
      SET dr_house_number1 = GB_GIN_HOUSE_NUMBER
      SET dr_street_name   = TRIM(TRIM(GB_GIN_THOROUGH_NAME) |: GB_GIN_THOROUGH_DESC)
      SET dr_house_number2 = GB_GIN_SUB_BUILDING
      SET dr_pobox_number  = PR_BOX1_NUMBER
      SET dr_address       = UCASE(TRIM(ADDR_LINE_1_TXT))
      SET dr_address2      = UCASE(TRIM(ADDR_LINE_2_TXT))
      SET dr_address3      = UCASE(TRIM(ADDR_LINE_3_TXT))
      SET dr_city_name     = UCASE(TRIM(CITY_NAME))
      SET dr_region_name   = UCASE(TRIM(TERR_NAME))
      SET dr_postal_code   = UCASE(TRIM(POSTL_AREA_CODE))
   ENDIF
   </CONDITION>
</ENTRY>
<ENTRY>
   <ENTRY_ID>3</ENTRY_ID>
   <FOR_FILES>OUTPUT</FOR_FILES>
   <CONDITION>SUBROUTINE
   /* SUBROUTINE: gbr_parsed_address
/* +----------------------------------------------------------------------------+
/* | SUBROUTINE: gbr_parsed_address                                             |
/* +----------------------------------------------------------------------------+
/*
/*   Purpose: Populates the address fields for an address that did not match the
/*            UK Royal Mail postal directory.
/*
   IF(ALWAYS)
      SET dr_house_number1 = GB_GIN_HOUSE_NUMBER
      IF(GB_GIN_DPND_THOROUGH_NAME != "")
         SET dr_street_name   = TRIM(TRIM(GB_GIN_DPND_THOROUGH_NAME) |:
         \                           TRIM(GB_GIN_DPND_THOROUGH_DESC) |:
         \                           TRIM(GB_GIN_THOROUGH_NAME)      |:
         \                                GB_GIN_THOROUGH_DESC         )
      ELSE
         SET dr_street_name   = TRIM(TRIM(GB_GIN_THOROUGH_NAME)      |:
         \                                GB_GIN_THOROUGH_DESC         )
      ENDIF
      SET dr_house_number2 = GB_GIN_SUB_BUILDING
      SET dr_pobox_number  = PR_BOX1_NUMBER
      IF(GB_GIN_RECORD_TYPE = "3")
         SET dr_address     = TRIM(TRIM(PR_BOX1_NAME_RECODED) |: PR_BOX1_NUMBER)
      ELSE
         SET dr_address     = TRIM(TRIM(DR_HOUSE_NUMBER1) |: TRIM(DR_STREET_NAME) |: DR_HOUSE_NUMBER2)
         IF(dr_address = "")
            SET dr_address  = TRIM(TRIM(PR_BOX1_NAME_RECODED) |: PR_BOX1_NUMBER)
         ELSE
            SET dr_address2 = TRIM(TRIM(PR_BOX1_NAME_RECODED) |: PR_BOX1_NUMBER)
         ENDIF
      ENDIF
      /*... Add the building name to address line2.
      IF(NOT(dr_address CONTAINS TRIM(GB_GIN_BUILDING)))
         SET dr_address2   = TRIM(TRIM(dr_address2) |: GB_GIN_BUILDING)
      ENDIF
      /*... Add the parsed complex name to address line2.
      IF(PR_COMPLEX1_NAME_RECODED != "" AND
         \  NOT(dr_address2 CONTAINS TRIM(PR_COMPLEX1_NAME_ORIGINAL) |: TRIM(PR_COMPLEX1_TYPE_RECODED)))
         SET dr_address2 = TRIM(TRIM(dr_address2) |: TRIM(PR_COMPLEX1_NAME_ORIGINAL) |: PR_COMPLEX1_TYPE_RECODED)
      ENDIF
      /*... Add the parsed neighborhood names to address line3.
      SET dr_address3 = PR_NEIGH1_NAME_RECODED
      IF(PR_NEIGH2_NAME_RECODED != "" AND
         \  NOT(dr_address3 CONTAINS TRIM(PR_NEIGH2_NAME_RECODED)))
         SET dr_address3 = TRIM(TRIM(dr_address3) |: PR_NEIGH2_NAME_RECODED)
      ENDIF
      RUN SUBROUTINE(5)
      /*... Set city, province and postal-code.
      /* Use a more aggressive strategy to get cleansed city name.
      IF(GB_GOUT_POSTTOWN_NAME != ""  AND
         \  GB_GOUT_MATCH_LEVEL   &gt;  "1"    )
         SET dr_city_name   = GB_GOUT_POSTTOWN_NAME
         SET dr_region_name = GB_GOUT_COUNTY_NAME
         SET dr_postal_code = TRIM(TRIM(GB_GOUT_POSTAL_CODE_OUT) |: GB_GOUT_POSTAL_CODE_IN)
      ELSE
         SET dr_city_name   = PR_CITY_NAME_RECODED
         SET dr_region_name = PR_STATE_RECODED
         SET dr_postal_code = PR_POSTAL_CODE
      ENDIF
      /*... If necessary, retain the original address.
      IF(dr_address = "")
         SET dr_address        = TRIM(ADDR_LINE_1_TXT)
         SET dr_address2       = TRIM(ADDR_LINE_2_TXT)
         SET dr_address3       = TRIM(ADDR_LINE_3_TXT)
      ENDIF
   ENDIF
   </CONDITION>
</ENTRY>
<ENTRY>
   <ENTRY_ID>4</ENTRY_ID>
   <FOR_FILES>OUTPUT</FOR_FILES>
   <CONDITION>SUBROUTINE
   /* SUBROUTINE: gbr_postal_matched_address
/* +----------------------------------------------------------------------------+
/* | SUBROUTINE: gbr_postal_matched_address                                     |
/* +----------------------------------------------------------------------------+
/*
/*   Purpose: Populates the address fields for an address that matched the
/*            UK Royal Mail postal directory.
/*
   IF(ALWAYS)
      /* Use postal-matcher values
      SET dr_house_number1 = GB_GOUT_HOUSE_NUMBER
      IF(GB_GOUT_DPND_THOROUGH_NAME != "")
         SET dr_street_name   = TRIM(TRIM(GB_GOUT_DPND_THOROUGH_NAME) |:
         \                           TRIM(GB_GOUT_DPND_THOROUGH_DESC) |:
         \                           TRIM(GB_GOUT_THOROUGH_NAME)      |:
         \                                GB_GOUT_THOROUGH_DESC         )
      ELSE
         SET dr_street_name   = TRIM(TRIM(GB_GOUT_THOROUGH_NAME)      |:
         \                                GB_GOUT_THOROUGH_DESC         )
      ENDIF
      SET dr_house_number2 = GB_GOUT_SUB_BUILDING
      SET dr_pobox_number  = PR_BOX1_NUMBER
      SET dr_city_name     = GB_GOUT_POSTTOWN_NAME
      SET dr_region_name   = GB_GOUT_COUNTY_NAME
      SET dr_postal_code   = TRIM(TRIM(GB_GOUT_POSTAL_CODE_OUT) |: GB_GOUT_POSTAL_CODE_IN)
      /* Line1 = delivery address.
      IF(GB_GIN_RECORD_TYPE = "3")
         /*SET dr_address    = TRIM(TRIM(PR_BOX1_NAME_RECODED) |: PR_BOX1_NUMBER)
         SET dr_address    = TRIM(TRIM(PR_BOX1_NAME_RECODED) |: GB_GOUT_HOUSE_NUMBER)
      ELSE
         SET dr_address    = TRIM(TRIM(DR_HOUSE_NUMBER1) |: TRIM(DR_STREET_NAME) |: DR_HOUSE_NUMBER2)
      ENDIF
      /* Line2 = double-dependent locality name.
      /*         Include the building name if its not already in line1
      IF(TRIM(dr_address) CONTAINS TRIM(GB_GOUT_BUILDING))
         SET dr_address2   = GB_GOUT_DPND_LOCALITY_NAME
      ELSE
         SET dr_address2   = TRIM(TRIM(GB_GOUT_BUILDING) |: GB_GOUT_DPND_LOCALITY_NAME)
      ENDIF
      /* Line3 = locality name.
      SET dr_address3      = GB_GOUT_LOCALITY_NAME
      RUN SUBROUTINE(5)
   ENDIF
   </CONDITION>
</ENTRY>
<ENTRY>
   <ENTRY_ID>5</ENTRY_ID>
   <FOR_FILES>OUTPUT</FOR_FILES>
   <CONDITION>SUBROUTINE
   /* SUBROUTINE: remove_blank_address_lines
/* +----------------------------------------------------------------------------+
/* | SUBROUTINE: remove_blank_address_lines                                     |
/* +----------------------------------------------------------------------------+
/*
/*   Removes blank or duplicate address lines from finished address.
/*
   IF(ALWAYS)
      /*... remove duplicate lines.
      IF(dr_address = dr_address2)
         SET dr_address2 = ""
      ENDIF
      IF(dr_address = dr_address3)
         SET dr_address3 = ""
      ENDIF
      IF(dr_address2 = dr_address3)
         SET dr_address3 = ""
      ENDIF
      /*... remove blank lines.
      IF(dr_address2 = "")
         SET dr_address2 = dr_address3
         SET dr_address3 = ""
      ENDIF
      IF(dr_address = "")
         SET dr_address  = dr_address2
         SET dr_address2 = ""
      ENDIF
   ENDIF
   </CONDITION>
</ENTRY>
<ENTRY>
   <ENTRY_ID>6</ENTRY_ID>
   <FOR_FILES>OUTPUT</FOR_FILES>
   <CONDITION>SUBROUTINE
   /* SUBROUTINE: set_address_case
/* +----------------------------------------------------------------------------+
/* | SUBROUTINE: set_address_case                                               |
/* +----------------------------------------------------------------------------+
/*
   IF(ALWAYS)
      SET dr_house_number2 = TCASE(DR_HOUSE_NUMBER2)
      SET dr_street_name   = TCASE(DR_STREET_NAME)
      SET dr_city_name     = TCASE(DR_CITY_NAME)
      SET dr_region_name   = UCASE(DR_REGION_NAME)
      SET dr_address       = TCASE(DR_ADDRESS)
      SET dr_address2      = TCASE(DR_ADDRESS2)
      SET dr_address3      = TCASE(DR_ADDRESS3)
   ENDIF
   </CONDITION>
</ENTRY>
<ENTRY>
   <ENTRY_ID>7</ENTRY_ID>
   <FOR_FILES>OUTPUT</FOR_FILES>
   <CONDITION>SUBROUTINE
   /* SUBROUTINE: set_name_fields_clear_busname
/* +----------------------------------------------------------------------------+
/* | SUBROUTINE: set_name_fields_clear_busname                                  |
/* +----------------------------------------------------------------------------+
/*
/*   This is an improved "set_name_fields" routine that also conditionally
/*   clears the busname fields.  It is used by EMEA.
/*
   IF(ALWAYS)
      /*... Set name fields.
      SET dr_business_name = TCASE(PR_BUSNAME_ORIGINAL_01)
      SET dr_alias_account = PR_BUSNAME_RECODED_01
      SET dr_alias_contact = PR_GIVEN_NAME1_RECODED_01
      SET dr_mrmrs         = TRIM(TCASE(NAME_PREFX_TXT))
      SET dr_first_name    = TRIM(TCASE(GVN_NAME))
      SET dr_middle_name   = TRIM(TCASE(MID_NAME))
      SET dr_last_name     = TRIM(TCASE(FAMLY_NAME))
      SET dr_name_gender   = TRIM(UCASE(GENDR_IND))
      SET dr_name_suffix   = TRIM(TCASE(NAME_SUFFX_TXT))
      /*... Clear business name fields, if name_form is not 1.
      IF(pr_name_form_01 != "1")
         SET dr_business_name = ""
         SET dr_alias_account = ""
      ENDIF
   ENDIF
   </CONDITION>
</ENTRY>
</ARGUMENTS>
</CONDITIONALS>
</PARAMETER>
    </OUTPUT>
    <PROCESS>
      <PARAMETER>
        <PROCESS_SETTINGS>
          <ARGUMENTS>
            <PROCESS_LOG_FILE_NAME>$(LOGS)/p5_gb_drtranfrmr_log.txt</PROCESS_LOG_FILE_NAME>
            <ENABLE_DEBUG_OUTPUT>0</ENABLE_DEBUG_OUTPUT>
            <DEBUG_FILE_NAME>$(DEBUG)/p5_gb_drtranfrmr_debug.txt</DEBUG_FILE_NAME>
            <MASK_FILE_NAME>$(GENERAL_RESOURCES)/maskfile$(PLAFEXT)</MASK_FILE_NAME>
<STRSUB_TABLE_FILE_NAME>$(GENERAL_RESOURCES)/strsub$(PLAFEXT)</STRSUB_TABLE_FILE_NAME>
          </ARGUMENTS>
        </PROCESS_SETTINGS>
      </PARAMETER>
    </PROCESS>
    <STATISTICS>
      <PARAMETER>
        <STATISTICS_SETTINGS>
          <ARGUMENTS>
            <STATS_FILE_NAME>$(STATS)/p5_gb_drtranfrmr_stats.txt</STATS_FILE_NAME>
          </ARGUMENTS>
        </STATISTICS_SETTINGS>
      </PARAMETER>
    </STATISTICS>
  </CATEGORY>

</TRANFRMR>
    
