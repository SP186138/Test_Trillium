<?xml version="1.0" encoding="UTF-8"?>
<TRANFRMR xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <SETTINGS_FILE_ENCODING>UTF8</SETTINGS_FILE_ENCODING>
   
   

<CATEGORY>
      
      <INPUT>
         <PARAMETER>
            <INPUT_SETTINGS>
               <ARGUMENTS>
                  <ENTRY>
                     <ENTRY_ID>1</ENTRY_ID>
                     <FILE_QUALIFIER>e66_tss_match_input_crm_deu</FILE_QUALIFIER>
                     <DATA_FILE_NAME>stdin</DATA_FILE_NAME>
                     <DDL_FILE_NAME>$(DDL)/de_tranfrmr_p3.ddx</DDL_FILE_NAME>
               <FILE_DELIMITER/>
               <USE_QUOTES_AS_QUALIFIER/>
             
                     
                     <START_RECORD/>
                     <MAX_RECORDS/>
                     <NTH_SAMPLE/>
                     
                     <EXCEPTIONS_FILE_NAME/>
                     
                     
                     
                  <SELECT_RECORDS/>
</ENTRY>
               </ARGUMENTS>
            </INPUT_SETTINGS>
            
            <CONDITIONALS>
               <ARGUMENTS>
                  <ENTRY>
                     <ENTRY_ID>1</ENTRY_ID>
                     <FOR_FILES>e66_tss_match_input_crm_deu</FOR_FILES>
                     <CONDITION>IF (ALWAYS)
        IF (ALWAYS)
    ENDIF
    
    ENDIF</CONDITION>
                  </ENTRY>
               </ARGUMENTS>
            </CONDITIONALS>
         </PARAMETER>
      </INPUT>
      <OUTPUT>
         <PARAMETER>
            <OUTPUT_SETTINGS>
               <ARGUMENTS>
                  <FILE_QUALIFIER>OUTPUT</FILE_QUALIFIER>
                  <DATA_FILE_NAME>$(OUTPUT)/de_tranfrmr_p4.dat</DATA_FILE_NAME>
                  <DDL_FILE_NAME>$(DDL)/de_tranfrmr_p4.ddx</DDL_FILE_NAME>
                  <FILE_SEQUENCE_FIELD_NAME>_SEQUENCE_NUMBER</FILE_SEQUENCE_FIELD_NAME>
                  
               <SELECT_RECORDS/>
</ARGUMENTS>
            </OUTPUT_SETTINGS>
            
            <TABLE_RECODING>
               <ARGUMENTS>
                  <ENTRY>
                     <ENTRY_ID>1</ENTRY_ID>
<ENTRY_DESCRIPTION>Table_Recode: Look for bad winkey1 values</ENTRY_DESCRIPTION>
                     <FILE_QUALIFIER>RECODE1</FILE_QUALIFIER>
                     <TABLE_FILE_NAME>$(USRTABLES)/bad_winkey1_keys.tbl</TABLE_FILE_NAME>
                     <DDL_FILE_NAME>$(DDL)/bad_winkey1_keys.ddx</DDL_FILE_NAME>
                     <FILE_DELIMITER>Pipe</FILE_DELIMITER>
                     <LOOKUP_PHRASE_SEPARATOR/>
                     <LOOKUP_TABLE_FIELDS>WINDOW_KEY_01</LOOKUP_TABLE_FIELDS>
                     <LOOKUP_FIELDS_CASE_SENSITIVE>Y</LOOKUP_FIELDS_CASE_SENSITIVE>
                     <LOOKUP_OUTPUT_FIELDS>TMP_ADDRESS_WINKEY</LOOKUP_OUTPUT_FIELDS>
                     <LOOKUP_OUTPUT_FIELDS_FORMAT>L</LOOKUP_OUTPUT_FIELDS_FORMAT>
                     <RECODE_TABLE_FIELDS>FLAG</RECODE_TABLE_FIELDS>
                     <RECODE_TABLE_FIELDS_FORMAT>L</RECODE_TABLE_FIELDS_FORMAT>
                     <RECODE_OUTPUT_FIELDS>TMP_ADDRESS_WINKEY</RECODE_OUTPUT_FIELDS>
                     
                  </ENTRY>
                  <ENTRY>
                     <ENTRY_ID>2</ENTRY_ID>
<ENTRY_DESCRIPTION>Table_Recode: Look for bad email values</ENTRY_DESCRIPTION>
                     <FILE_QUALIFIER>RECODE2</FILE_QUALIFIER>
                     <TABLE_FILE_NAME>$(USRTABLES)/bad_email_keys.tbl</TABLE_FILE_NAME>
                     <DDL_FILE_NAME>$(DDL)/bad_email_keys.ddx</DDL_FILE_NAME>
                     <FILE_DELIMITER>Pipe</FILE_DELIMITER>
                     <LOOKUP_PHRASE_SEPARATOR/>
                     <LOOKUP_TABLE_FIELDS>EMAIL_ADDR_TXT_1</LOOKUP_TABLE_FIELDS>
                     <LOOKUP_FIELDS_CASE_SENSITIVE>Y</LOOKUP_FIELDS_CASE_SENSITIVE>
                     <LOOKUP_OUTPUT_FIELDS>TMP_EMAIL_WINKEY</LOOKUP_OUTPUT_FIELDS>
                     <LOOKUP_OUTPUT_FIELDS_FORMAT>L</LOOKUP_OUTPUT_FIELDS_FORMAT>
                     <RECODE_TABLE_FIELDS>FLAG</RECODE_TABLE_FIELDS>
                     <RECODE_TABLE_FIELDS_FORMAT>L</RECODE_TABLE_FIELDS_FORMAT>
                     <RECODE_OUTPUT_FIELDS>TMP_EMAIL_WINKEY</RECODE_OUTPUT_FIELDS>
                     
                  </ENTRY>
                  <ENTRY>
                     <ENTRY_ID>3</ENTRY_ID>
<ENTRY_DESCRIPTION>Table_Recode: Look for bad phone values</ENTRY_DESCRIPTION>
                     <FILE_QUALIFIER>RECODE3</FILE_QUALIFIER>
                     <TABLE_FILE_NAME>$(USRTABLES)/bad_phone_keys.tbl</TABLE_FILE_NAME>
                     <DDL_FILE_NAME>$(DDL)/bad_phone_keys.ddx</DDL_FILE_NAME>
                     <FILE_DELIMITER>Pipe</FILE_DELIMITER>
                     <LOOKUP_PHRASE_SEPARATOR/>
                     <LOOKUP_TABLE_FIELDS>FULL_PHONE_NUM_1</LOOKUP_TABLE_FIELDS>
                     <LOOKUP_FIELDS_CASE_SENSITIVE>Y</LOOKUP_FIELDS_CASE_SENSITIVE>
                     <LOOKUP_OUTPUT_FIELDS>TMP_PHONE_WINKEY</LOOKUP_OUTPUT_FIELDS>
                     <LOOKUP_OUTPUT_FIELDS_FORMAT>L</LOOKUP_OUTPUT_FIELDS_FORMAT>
                     <RECODE_TABLE_FIELDS>FLAG</RECODE_TABLE_FIELDS>
                     <RECODE_TABLE_FIELDS_FORMAT>L</RECODE_TABLE_FIELDS_FORMAT>
                     <RECODE_OUTPUT_FIELDS>TMP_PHONE_WINKEY</RECODE_OUTPUT_FIELDS>
                     
                  </ENTRY>
               </ARGUMENTS>
            </TABLE_RECODING>
            <CONDITIONALS>
               <ARGUMENTS>
                  <ENTRY>
                     <ENTRY_ID>1</ENTRY_ID>
                     <FOR_FILES>OUTPUT</FOR_FILES>
                     <CONDITION>IF (ALWAYS)
        IF (ALWAYS)
    SET TMP_ADDRESS_WINKEY = WINDOW_KEY_01
    SET TMP_EMAIL_WINKEY = EMAIL_ADDR_TXT_1
    SET TMP_PHONE_WINKEY = FULL_PHONE_NUM_1
    RUN TABLE_RECODING(1-3)
    SET TMP_ADDRESS_WINKEY = TERNARY( TRIM( TMP_ADDRESS_WINKEY) = "~BADKEY~", "~BADKEY~" || _SEQUENCE_NUMBER, TMP_ADDRESS_WINKEY)
    SET TMP_EMAIL_WINKEY = TERNARY( TRIM( TMP_EMAIL_WINKEY) = "~BADKEY~", "~BADKEY~" || _SEQUENCE_NUMBER, TMP_EMAIL_WINKEY)
    SET TMP_PHONE_WINKEY = TERNARY( TRIM( TMP_PHONE_WINKEY) = "~BADKEY~", "~BADKEY~" || _SEQUENCE_NUMBER, TMP_PHONE_WINKEY)
    ENDIF
    
    ENDIF
</CONDITION>
                  </ENTRY>
               </ARGUMENTS>
            </CONDITIONALS>
         </PARAMETER>
      </OUTPUT>
      <PROCESS>
         <PARAMETER>
            <PROCESS_SETTINGS>
               <ARGUMENTS>
                  <PROCESS_LOG_FILE_NAME>$(LOGS)/p4_de_tranfrmr_log.txt</PROCESS_LOG_FILE_NAME>
                  <ENABLE_DEBUG_OUTPUT>0</ENABLE_DEBUG_OUTPUT>
                  <DEBUG_FILE_NAME>$(DEBUG)/p4_de_tranfrmr_debug.txt</DEBUG_FILE_NAME>
                  <MASK_FILE_NAME>$(GENERAL_RESOURCES)/maskfile$(PLAFEXT)</MASK_FILE_NAME>
                  <STRSUB_TABLE_FILE_NAME>$(GENERAL_RESOURCES)/strsub$(PLAFEXT)</STRSUB_TABLE_FILE_NAME>
               </ARGUMENTS>
            </PROCESS_SETTINGS>
         </PARAMETER>
      </PROCESS>
      <STATISTICS>
         <PARAMETER>
            <STATISTICS_SETTINGS>
               <ARGUMENTS>
                  <STATS_FILE_NAME>$(STATS)/p4_de_tranfrmr_stats.txt</STATS_FILE_NAME>
               </ARGUMENTS>
            </STATISTICS_SETTINGS>
         </PARAMETER>
      </STATISTICS>
   </CATEGORY>
</TRANFRMR>
